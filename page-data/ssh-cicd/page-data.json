{"componentChunkName":"component---src-components-template-js","path":"/ssh-cicd","result":{"data":{"markdownRemark":{"id":"d0cae691-217f-5781-a989-65d505e14694","html":"<p>One strategy I usually use on a CI/CD pipeline when I am too lazy to do\nsomething more complicated, is to SSH into the server and there execute\na script, or git pull, to update the source code.</p>\n<p>However, I don't do this often enough, and sometimes I forget how to do it, this post\ndocuments how I usually do it, so I can come back to it to remember it or to\nupdate the proccess as I learn new things.</p>\n<p>Also, I hope it helps you if you are looking for something like this\nand having trouble implementing it.</p>\n<h4>Generating SSH key-pair</h4>\n<p>First, the server you are trying to SSH into need to have a SSH key-pair,\nnamely, a private key and a public key. The following command creates\na simple rsa key-par for you:</p>\n<pre><code class=\"language-bash\">ssh-keygen\n</code></pre>\n<p>It creates two files, the private key and the public key, in the following\nlocations of your filesystem if you didn't change anything on the command:</p>\n<ol>\n<li>~/.ssh/id_rsa which is the private key</li>\n<li>~/.ssh/id_rsa.pub which is the public key</li>\n</ol>\n<h4>Creating environment variable</h4>\n<p>The container needs the private key so it can have authorization to SSH into\nthe machine, this can be done by setting a enviroment variable on your version\ncontrol platform, be it GitHub or GitLab. I like to name the variable <strong>$SSH_PRIVATE_KEY</strong>.</p>\n<pre><code class=\"language-bash\">cat ~/.ssh/id_rsa # Print the contents to the console\n</code></pre>\n<p>After printing it to the console, copy it and paste it into the environment variable:\n<img src=\"./gitlab-variables.png\" alt=\"GitLab CI/CD Variables Interface\"></p>\n<h4>Getting the variables into the container</h4>\n<pre><code class=\"language-yml\">script:\n  - eval $(ssh-agent -s)                           # Start SSH Agent\n  - mkdir -p ~/.ssh                                # Create SSH directory, if the container didn't have one\n  - ssh-keycan -t $SERVER_URL > ~/.ssh/known_hosts # Get the public key of the server and add it to known_hosts\n  - bash -c 'ssh-add &#x3C;(echo $SSH_PRIVATE_KEY)'     # Add the private key of the server \n  - ssh $SERVER_URL 'echo hello world'             # SSH into the server\n</code></pre>","frontmatter":{"date":"February 14, 2020","path":"/ssh-cicd","title":"Deploying code by SSHing into a machine","description":"SSH into server on CI/CD machine"}}},"pageContext":{}}}