{"componentChunkName":"component---src-components-template-js","path":"/ssh-cicd-server","result":{"data":{"markdownRemark":{"id":"d0cae691-217f-5781-a989-65d505e14694","html":"<p>De vez em quando, quando tenho que fazer o deploy de alguma aplicação, tenho\nque fazer SSH em alguma máquina, seja por que ela ta hospedando a aplicação,\nou por que ela é o master node de algo que comanda outras máquinas.</p>\n<p>Mas como eu não faço isso frequentemente, as vezes esqueço uns passos,\ne as vezes vem gente perguntando pra mim como fazer, então resolvi\nescrever aqui, pra facilitar o trabalho. :)</p>\n<h4>Gerar o par de chaves SSH</h4>\n<p>Primeiro, a máquina em que você tá tentando entrar tem que ser um cliente\nSSH, geralmente é o <code>openssh</code>, com a porta aberta (22), e um par de chaves.\nO <code>ssh-keygen</code> pode ser usado pra gerar esse par de chaves, que por padrão\ncria duas elas nesse local:</p>\n<ol>\n<li>~/.ssh/id_rsa => a chave privada</li>\n<li>~/.ssh/id_rsa.pub => a chave pública</li>\n</ol>\n<h4>Variáveis de ambiente no cliente Git</h4>\n<p>Eu na maioria das vezes uso o GitLab ou o GitHub pra fazer o deploy, então\nvou usar eles como referência, em ambos é criado um container para\nfazer SSH na máquina desejada, e pra isso é mais seguro botar\nas chaves em uma variável de ambiente do que no próprio código</p>\n<p>Para isso, o container precisa de informações, o host em que irá\nfazer SSH, o usuário e a chave privada do usuário, por padrão, eu gosto\nde nomear elas <strong>$HOST</strong>, <strong>$USER</strong> e <strong>$SSH_PRIVATE_KEY</strong>, respectivamente.</p>\n<p>Para pegar a chave privada: <code>cat .ssh/id_rsa</code> e copie o que aparece</p>\n<p>Por exemplo, no GitLab, essa é a interface pra salvar as variaveis\n<img src=\"./gitlab-variables.png\" alt=\"GitLab CI/CD Variables Interface\"></p>\n<h4>Examplo do script para o CI/CD do GitLab (.gitlab.yml)</h4>\n<pre><code class=\"language-yml\">script:\n  - eval $(ssh-agent -s)                           # Começar o agente SSH\n  - mkdir -p ~/.ssh                                # Criar o diretório do SSH, caso o container não tenha um\n  - ssh-keyscan $HOST > ~/.ssh/known_hosts         # Pegar a chave pública do host\n  - bash -c 'ssh-add &#x3C;(echo $SSH_PRIVATE_KEY)'     # Adicionar a chave privada do host\n  - ssh $USER@$HOST 'echo hello world'             # SSH no servidor\n</code></pre>","frontmatter":{"date":"February 14, 2020","path":"/ssh-cicd-server","title":"SSH para deploy mais fácil.","description":"SSH em um servidor para facilitar o deploy."}}},"pageContext":{}}}